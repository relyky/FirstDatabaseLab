// <auto-generated />
using System;
using FirstDatabaseLab.DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstDatabaseLab.DB.Migrations
{
    [DbContext(typeof(MyTestDbContext))]
    [Migration("20251015161155_AddDeveoper")]
    partial class AddDeveoper
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("我是Id欄位說明");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("我是Email欄位說明");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("我是Name欄位說明");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Order", b =>
                {
                    b.Property<int>("OrderNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNo"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrderNo");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Order_CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.OrderItem", b =>
                {
                    b.Property<int>("Ssn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ssn"));

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Ssn");

                    b.HasIndex(new[] { "OrderNo" }, "IX_OrderItem_OrderNo");

                    b.HasIndex(new[] { "ProductNo" }, "IX_OrderItem_ProductNo");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Product", b =>
                {
                    b.Property<int>("ProductNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductNo"));

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("ProductNo");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Order", b =>
                {
                    b.HasOne("FirstDatabaseLab.DB.Schema.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.OrderItem", b =>
                {
                    b.HasOne("FirstDatabaseLab.DB.Schema.Order", "OrderNoNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstDatabaseLab.DB.Schema.Product", "ProductNoNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderNoNavigation");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FirstDatabaseLab.DB.Schema.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
